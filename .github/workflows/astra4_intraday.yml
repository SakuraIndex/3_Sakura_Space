name: "ASTRA4 • intraday + publish (JST 09:00–15:30)"

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST)"
        required: true
        default: "09:00"
      session_end:
        description: "Session end (HH:MM JST)"
        required: true
        default: "15:30"
      day_anchor:
        description: "Day anchor time (HH:MM JST)"
        required: true
        default: "09:00"
      value_type:
        description: "percent or ratio"
        required: true
        default: "percent"

permissions:
  contents: write

env:
  INDEX_KEY: ASTRA4
  LABEL: ASTRA4
  CSV: docs/outputs/astra4_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close

  OUT_JSON: docs/charts/astra4_stats.json
  OUT_TEXT: docs/charts/astra4_post_intraday.txt
  SNAPSHOT_PNG: docs/charts/astra4_1d.png

  SITE_REPO: SakuraIndex/SakuraIndexSite
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/ASTRA4

concurrency:
  group: "intraday-astra4-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          if [ -f requirements.txt ]; then
            python -m pip install -U pip
            python -m pip install -r requirements.txt
          else
            python -m pip install -U pip
            python -m pip install pandas matplotlib
          fi

      - name: Verify inputs & files
        shell: bash
        run: |
          set -e
          test -f "${CSV}" || (echo "Missing CSV: ${CSV}" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "Missing script: scripts/make_intraday_post.py" && exit 1)

      - name: Decide publish variant (AM / PM)
        id: ampm
        shell: bash
        run: |
          TZ=Asia/Tokyo date +%H | awk '{ if($1 < 12) print "variant=am"; else print "variant=pm" }' >> "$GITHUB_OUTPUT"

      # ★ 追加: すべての出力先ディレクトリを先に作成（Wガード）
      - name: Prepare output directories
        shell: bash
        run: |
          set -e
          mkdir -p "$(dirname "${OUT_JSON}")"
          mkdir -p "$(dirname "${OUT_TEXT}")"
          mkdir -p "$(dirname "${SNAPSHOT_PNG}")"

      - name: Generate intraday snapshot and post (with fallback)
        shell: bash
        env:
          SESSION_START: ${{ inputs.session_start }}
          SESSION_END:   ${{ inputs.session_end }}
          DAY_ANCHOR:    ${{ inputs.day_anchor }}
          VALUE_TYPE:    ${{ inputs.value_type }}
          OUT_JSON:      ${{ env.OUT_JSON }}
          OUT_TEXT:      ${{ env.OUT_TEXT }}
          SNAPSHOT_PNG:  ${{ env.SNAPSHOT_PNG }}
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${CSV}" \
            --out-json "${OUT_JSON}" \
            --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAPSHOT_PNG}" \
            --session-start "${SESSION_START}" \
            --session-end "${SESSION_END}" \
            --day-anchor "${DAY_ANCHOR}" \
            --basis "${BASIS}" \
            --label "${LABEL}" \
            --dt-col "${DT_COL}" \
            --value-type "${VALUE_TYPE}"

          # --- Fallback: PNGが無ければ簡易PNGを作る（二重ガードで mkdir も実行）
          if [ ! -f "${SNAPSHOT_PNG}" ]; then
            echo "[fallback] create simple PNG -> ${SNAPSHOT_PNG}"
            python -c "import pandas as pd, matplotlib.pyplot as plt, pathlib as P; csv=P.Path('docs/outputs/astra4_intraday.csv'); png=P.Path('docs/charts/astra4_1d.png'); png.parent.mkdir(parents=True, exist_ok=True); df=pd.read_csv(csv); cols=[c for c in df.columns if c!='Datetime']; y=[0] if not cols else df[cols].mean(axis=1).tolist(); x=list(range(len(y))); plt.figure(figsize=(8,3), dpi=160); plt.plot(x,y); plt.title('ASTRA4 Intraday (fallback)'); plt.tight_layout(); plt.savefig(png)"
          fi

      - name: Upload artifacts (for debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: astra4_intraday_artifacts
          path: |
            ${{ env.OUT_TEXT }}
            ${{ env.SNAPSHOT_PNG }}
            ${{ env.OUT_JSON }}

      - name: Checkout site repo (for publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ secrets.SITE_TOKEN }}
          fetch-depth: 1

      - name: Copy snapshot files into site tree
        shell: bash
        run: |
          set -e
          mkdir -p "${PUBLISH_DIR}"
          cp -f "../${OUT_JSON}"      "${PUBLISH_DIR}/astra4_stats.json"
          cp -f "../${OUT_TEXT}"      "${PUBLISH_DIR}/astra4_post_intraday.txt"
          cp -f "../${SNAPSHOT_PNG}"  "${PUBLISH_DIR}/astra4_1d.png"
          ls -l "${PUBLISH_DIR}"

      - name: Commit & push site charts
        shell: bash
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add "${PUBLISH_DIR}"
            git commit -m "ASTRA4 intraday update: $(TZ=Asia/Tokyo date '+%Y-%m-%d %H:%M JST')"
            git push origin "${SITE_BRANCH}"
          else
            echo "No changes to commit."
          fi

      - name: Post Setup Python 3.11
        if: always()
        run: python --version

      - name: Post Checkout (this repo)
        if: always()
        run: echo "Done."
