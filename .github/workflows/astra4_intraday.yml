name: "ASTRA4 ‚Ä¢ intraday + publish (JST 09:00‚Äì15:30)"

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST)"
        required: true
        default: "09:00"
      session_end:
        description: "Session end (HH:MM JST)"
        required: true
        default: "15:30"
      day_anchor:
        description: "Day anchor time (HH:MM JST)"
        required: true
        default: "09:00"
      value_type:
        description: "auto | percent | ratio"
        required: true
        default: "auto"

permissions:
  contents: write

env:
  INDEX_KEY: ASTRA4
  LABEL: ASTRA4
  CSV: docs/outputs/astra4_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close

  OUT_JSON: docs/charts/astra4_stats.json
  OUT_TEXT: docs/charts/astra4_post_intraday.txt
  SNAPSHOT_PNG: docs/charts/astra4_1d.png

  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/ASTRA4
  PUBLISH_TOKEN: ${{ secrets.SITE_PUBLISH_TOKEN || secrets.SITE_PAT || secrets.GITHUB_TOKEN }}

concurrency:
  group: "intraday-astra4-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          if [ -f requirements.txt ]; then
            python -m pip install -U pip
            python -m pip install -r requirements.txt
          else
            python -m pip install -U pip
            python -m pip install pandas matplotlib
          fi

      - name: Verify inputs & files
        shell: bash
        run: |
          set -e
          test -f "${CSV}" || (echo "‚ùå Missing CSV: ${CSV}" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "‚ùå Missing script: scripts/make_intraday_post.py" && exit 1)

      - name: Prepare output directories
        shell: bash
        run: |
          set -e
          mkdir -p "$(dirname "${OUT_JSON}")" "$(dirname "${OUT_TEXT}")" "$(dirname "${SNAPSHOT_PNG}")"

      - name: Generate intraday snapshot and post
        shell: bash
        env:
          SESSION_START: ${{ inputs.session_start }}
          SESSION_END:   ${{ inputs.session_end }}
          DAY_ANCHOR:    ${{ inputs.day_anchor }}
          VALUE_TYPE:    ${{ inputs.value_type }}
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${CSV}" \
            --out-json "${OUT_JSON}" \
            --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAPSHOT_PNG}" \
            --session-start "${SESSION_START}" \
            --session-end "${SESSION_END}" \
            --day-anchor "${DAY_ANCHOR}" \
            --basis "${BASIS}" \
            --label "${LABEL}" \
            --dt-col "${DT_COL}" \
            --value-type "${VALUE_TYPE}"

      - name: Upload artifacts (for debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: astra4_intraday_artifacts
          path: |
            ${{ env.OUT_TEXT }}
            ${{ env.SNAPSHOT_PNG }}
            ${{ env.OUT_JSON }}

      - name: Checkout site repo (for publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ env.PUBLISH_TOKEN }}
          path: site
          fetch-depth: 0

      - name: Copy snapshot files into site tree
        shell: bash
        run: |
          set -euo pipefail
          dst="site/${PUBLISH_DIR}"
          mkdir -p "${dst}"
          cp -f "${OUT_JSON}"      "${dst}/astra4_stats.json"
          cp -f "${OUT_TEXT}"      "${dst}/astra4_post_intraday.txt"
          cp -f "${SNAPSHOT_PNG}"  "${dst}/astra4_1d.png"
          echo "üìÅ Copied to ${dst}:"
          ls -l "${dst}"

      - name: Commit & push site charts
        working-directory: site
        shell: bash
        run: |
          set -euo pipefail
          git config user.email "actions@github.com"
          git config user.name  "github-actions[bot]"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update ASTRA4 intraday charts ($(date '+%Y-%m-%d %H:%M JST'))"
            git push origin "${SITE_BRANCH}"
          fi

      - name: Post Setup Python 3.11
        if: always()
        run: python --version

      - name: Post Checkout (this repo)
        if: always()
        run: echo "‚úÖ Workflow finished."
