name: ASTRA4 • intraday + publish (JST 09:00–15:30)

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST)"
        required: true
        default: "09:00"
      session_end:
        description: "Session end (HH:MM JST)"
        required: true
        default: "15:30"
      day_anchor:
        description: "Day anchor time (HH:MM JST)"
        required: true
        default: "09:00"
      value_type:
        description: "Value type"
        required: true
        default: "percent"
        type: choice
        options: [percent, ratio]

permissions:
  contents: write

env:
  # 固定値（指数ごとに変更）
  INDEX_KEY: ASTRA4
  LABEL: ASTRA4
  CSV: docs/outputs/astra4_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close

  # 公開サイト（必要に応じて変更）
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts/${{ env.INDEX_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: bash
        run: |
          set -e
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else
            python -m pip install pandas matplotlib
          fi

      - name: Verify inputs & files
        shell: bash
        run: |
          set -e
          test -f "${CSV}" || { echo "Missing CSV: ${CSV}"; exit 1; }
          test -f scripts/make_intraday_post.py || { echo "Missing script: scripts/make_intraday_post.py"; exit 1; }

      - name: Generate intraday snapshot and post (with fallback)
        shell: bash
        env:
          SESSION_START: ${{ inputs.session_start }}
          SESSION_END:   ${{ inputs.session_end }}
          DAY_ANCHOR:    ${{ inputs.day_anchor }}
          VALUE_TYPE:    ${{ inputs.value_type }}
          OUT_JSON:      docs/charts/astra4_stats.json
          OUT_TEXT:      docs/charts/astra4_post_intraday.txt
          SNAPSHOT_PNG:  docs/charts/astra4_1d.png
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="
          python scripts/make_intraday_post.py \
            --index-key "${INDEX_KEY}" \
            --csv "${CSV}" \
            --out-json "${OUT_JSON}" \
            --out-text "${OUT_TEXT}" \
            --snapshot-png "${SNAPSHOT_PNG}" \
            --session-start "${SESSION_START}" \
            --session-end "${SESSION_END}" \
            --day-anchor "${DAY_ANCHOR}" \
            --basis "${BASIS}" \
            --label "${LABEL}" \
            --dt-col "${DT_COL}" \
            --value-type "${VALUE_TYPE}"

          # --- fallback PNG generation (if snapshot was not created) ---
          if [ ! -f "${SNAPSHOT_PNG}" ]; then
            echo "[fallback] create simple PNG → ${SNAPSHOT_PNG}"
            cat > _fallback_astra4.py <<'PY'
import pandas as pd
import matplotlib.pyplot as plt
from pathlib import Path

csv_path = Path("docs/outputs/astra4_intraday.csv")
png_path = Path("docs/charts/astra4_1d.png")

df = pd.read_csv(csv_path)
num_cols = [c for c in df.columns if c != "Datetime"]

if len(num_cols) == 0:
    y = [0]
    x = [0]
else:
    y = df[num_cols].mean(axis=1).tolist()
    x = list(range(len(y)))

plt.figure(figsize=(8,3), dpi=160)
plt.plot(x, y)
plt.title("ASTRA4 Intraday (fallback)")
plt.tight_layout()
png_path.parent.mkdir(parents=True, exist_ok=True)
plt.savefig(png_path)
PY
            python _fallback_astra4.py
          fi

      - name: Upload artifacts (for debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: astra4_intraday_artifacts
          path: |
            docs/charts/astra4_post_intraday.txt
            docs/charts/astra4_1d.png
            docs/charts/astra4_stats.json

      - name: Checkout site repo (for publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ secrets.GITHUB_TOKEN }}
          path: site

      - name: Copy snapshot files into site tree
        shell: bash
        run: |
          set -e
          mkdir -p "site/${PUBLISH_DIR}"
          cp -f docs/charts/astra4_1d.png        "site/${PUBLISH_DIR}/"
          cp -f docs/charts/astra4_stats.json    "site/${PUBLISH_DIR}/"
          # （必要ならテキストも）
          cp -f docs/charts/astra4_post_intraday.txt "site/${PUBLISH_DIR}/" || true

      - name: Commit & push site charts
        shell: bash
        working-directory: site
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No site changes."
          else
            git commit -m "ASTRA4: intraday charts ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git push origin "${SITE_BRANCH}"
          fi
