name: ASTRA4 • intraday + publish (JST 09:00–15:30)

on:
  workflow_dispatch:
    inputs:
      session_start:
        description: "Session start (HH:MM JST)"
        required: true
        default: "09:00"
      session_end:
        description: "Session end (HH:MM JST)"
        required: true
        default: "15:30"
      day_anchor:
        description: "Day anchor time (HH:MM JST)"
        required: true
        default: "09:00"
      value_type:
        description: "Change value type: percent | ratio"
        required: true
        default: "percent"

permissions:
  contents: write

env:
  INDEX_KEY: ASTRA4
  LABEL: ASTRA4
  CSV: docs/outputs/astra4_intraday.csv
  DT_COL: Datetime
  BASIS: prev_close
  SITE_REPO: SakuraIndex/Sakura-Index-Site
  SITE_BRANCH: main
  PUBLISH_DIR: docs/charts

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          set -e
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            pip install pandas matplotlib
          fi

      - name: Verify inputs & files
        run: |
          set -e
          test -f "${CSV}" || (echo "Missing CSV: ${CSV}" && exit 1)
          test -f scripts/make_intraday_post.py || (echo "Missing script: scripts/make_intraday_post.py" && exit 1)

      - name: Decide publish variant (AM / PM)
        id: ampm
        shell: bash
        env:
          TZ: Asia/Tokyo
        run: |
          H=$(date +%H)
          if [ "$H" -lt 12 ]; then
            echo "variant=am" >> "$GITHUB_OUTPUT"
          else
            echo "variant=pm" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate intraday snapshot and post (with fallback)
        env:
          SESSION_START: ${{ inputs.session_start }}
          SESSION_END:   ${{ inputs.session_end }}
          DAY_ANCHOR:    ${{ inputs.day_anchor }}
          VALUE_TYPE_IN: ${{ inputs.value_type }}
          OUT_JSON:      docs/outputs/astra4_stats.json
          OUT_TEXT:      docs/outputs/astra4_post_intraday.txt
          SNAPSHOT_PNG:  docs/outputs/astra4_intraday.png
        shell: bash
        run: |
          set -euo pipefail
          echo "=== Generate ${INDEX_KEY} intraday snapshot ==="

          python scripts/make_intraday_post.py \
            --index-key     "${INDEX_KEY}" \
            --csv           "${CSV}" \
            --out-json      "${OUT_JSON}" \
            --out-text      "${OUT_TEXT}" \
            --snapshot-png  "${SNAPSHOT_PNG}" \
            --session-start "${SESSION_START}" \
            --session-end   "${SESSION_END}" \
            --day-anchor    "${DAY_ANCHOR}" \
            --basis         "${BASIS}" \
            --label         "${LABEL}" \
            --dt-col        "${DT_COL}" \
            --value-type    "${VALUE_TYPE_IN}"

          # フォールバック：PNG が無い場合は簡易プロットを生成
          if [ ! -f "${SNAPSHOT_PNG}" ]; then
            echo "[fallback] ${SNAPSHOT_PNG} を生成します"
            python - <<'PY'
            import pandas as pd, matplotlib.pyplot as plt, pathlib

            csv_path = pathlib.Path("docs/outputs/astra4_intraday.csv")
            png_path = pathlib.Path("docs/outputs/astra4_intraday.png")

            df = pd.read_csv(csv_path)
            num_cols = [c for c in df.columns if c != "Datetime"]
            if len(num_cols) == 0:
                y = [0]; x = [0]
            else:
                y = df[num_cols].mean(axis=1).tolist()
                x = range(len(y))

            plt.figure(figsize=(8,3), dpi=160)
            plt.plot(list(x), list(y))
            plt.title("ASTRA4 Intraday (fallback)")
            plt.tight_layout()
            png_path.parent.mkdir(parents=True, exist_ok=True)
            plt.savefig(png_path)
            PY
          fi

      - name: Upload artifacts (for debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: astra4_intraday_artifacts
          path: |
            docs/outputs/astra4_stats.json
            docs/outputs/astra4_post_intraday.txt
            docs/outputs/astra4_intraday.png

      - name: Checkout site repo (for publishing)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.SITE_REPO }}
          ref: ${{ env.SITE_BRANCH }}
          token: ${{ secrets.SITE_PAT }}
          path: site
          fetch-depth: 0

      - name: Copy snapshot files into site tree (with PNG auto-detect)
        shell: bash
        run: |
          set -e
          mkdir -p site/${PUBLISH_DIR}
          # 1d チャート（intraday を 1d として更新）
          cp -f docs/outputs/astra4_intraday.png site/${PUBLISH_DIR}/astra4_1d.png || true
          # stats / テキスト
          cp -f docs/outputs/astra4_stats.json        site/${PUBLISH_DIR}/astra4_stats.json || true
          cp -f docs/outputs/astra4_post_intraday.txt site/${PUBLISH_DIR}/astra4_post_intraday.txt || true

      - name: Commit & push site charts
        shell: bash
        working-directory: site
        run: |
          set -e
          git config user.name  "sakuraindex-bot"
          git config user.email "bot@sakuraindex.local"
          git add ${PUBLISH_DIR}/astra4_*
          if git diff --cached --quiet; then
            echo "No site updates."
            exit 0
          fi
          git commit -m "ASTRA4: update intraday snapshot & stats (${{ steps.ampm.outputs.variant }})"
          git push origin ${{ env.SITE_BRANCH }}
